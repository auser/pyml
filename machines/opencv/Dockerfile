


# DO NOT MODIFY THIS AUTOGENERATED FILE
# Change ./machines/opencv/Dockerfile.m4
FROM auser/tensorflow

RUN apt-get update -yq && apt-get install -yq gfortran && \
    apt-get autoremove -yq \
      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
RUN git clone https://github.com/xianyi/OpenBLAS /usr/local/src/OpenBLAS

RUN cd /usr/local/src/OpenBLAS && \
    make FC=gfortran && \
    make PREFIX=/opt/openblas install



#######################
# Leptonica
#######################

RUN apt-get update -qq -y && \
    apt-get install -yq \
    libwebp-dev \
    giflib-tools \
    autoconf automake libtool checkinstall

WORKDIR $INSTALL_ROOT
RUN git clone https://github.com/DanBloomberg/leptonica.git --branch v1.73 --depth 1 && \
    cd leptonica && \
    autoconf && ./configure && \
    make -j 4 && \
    make install && \
    ldconfig

#RUN wget http://www.leptonica.org/source/leptonica-1.73.tar.gz \
#    -O $INSTALL_ROOT/leptonica.tar.gz && \
#    tar -zxvf leptonica.tar.gz && \
#    rm -rf leptonica.tar.gz && \
#    cd leptonica-1.73 && \
#    ./configure && \
#    make -j 4 && \
#    make install && \
#    ldconfig

#######################
# End Leptonica
#######################

#######################
# Tesseract
#######################

WORKDIR $INSTALL_ROOT/
RUN wget https://github.com/tesseract-ocr/tesseract/archive/3.04.00.tar.gz \
      -O $INSTALL_ROOT/tesseract.tar.gz
RUN tar -zxvf $INSTALL_ROOT/tesseract.tar.gz && \
    rm -rf tesseract.tar.gz && \
    cd tesseract-3.04.00 && \
    ls -la && \
    /bin/bash ./autogen.sh && \
    ./configure && \
    LDFLAGS="-L/usr/local/lib" CFLAGS="-I/usr/local/include" make -j 4 && \
    make install && \
    ldconfig

#######################
# End Tesseract
#######################

RUN git clone --branch v0.6.1 --depth 1 git://source.ffmpeg.org/ffmpeg ${INSTALL_ROOT}/ffmpeg


#######################
# OpenCV
#######################

RUN git clone --branch 3.1.0 --depth 1 https://github.com/Itseez/opencv.git $INSTALL_ROOT/opencv && \
    git clone --branch 3.1.0 --depth 1 https://github.com/Itseez/opencv_contrib.git $INSTALL_ROOT/opencv_contrib

RUN mkdir $INSTALL_ROOT/opencv/build
WORKDIR $INSTALL_ROOT/opencv/build

RUN apt-get install -yq software-properties-common && \
    add-apt-repository ppa:george-edison55/cmake-3.x && \
    apt-get update -yq && \
    apt-get install -yq --only-upgrade cmake && \
    apt-get autoremove -yq \
      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    # apt-get install -yq qt5-default libvtk6-dev

RUN source /etc/profile.d/build-env && \
  export PY2_INCLUDE_DIR=$($PY2_DIR/bin/python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") && \
  export PY3_INCLUDE_DIR=$($PY3_DIR/bin/python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") && \

  export CUDA_LIB_PATH=/usr/local/cuda-7.5/targets/x86_64-linux/lib/stubs/:/usr/local/cuda/lib64/stubs/:$LD_LIBRARY_PATH && \
    export LD_LIBRARY_PATH=$CUDA_LIB_PATH:$LD_LIBRARY_PATH && \
    cmake -D CMAKE_BUILD_TYPE=Release \
          -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D WITH_TBB=ON \
          -D WITH_V4L=ON \
#          -D INSTALL_C_EXAMPLES=ON \     bug w/ tag=3.1.0: cmake has error
          -D INSTALL_PYTHON_EXAMPLES=ON \
          -D BUILD_EXAMPLES=OFF \
          -D BUILD_DOCS=OFF \
          -D OPENCV_EXTRA_MODULES_PATH=$INSTALL_ROOT/opencv_contrib/modules \
          -D WITH_XIMEA=YES \
#          -D WITH_QT=YES \
          -D WITH_FFMPEG=YES \
          -D WITH_PVAPI=YES \
          -D WITH_GSTREAMER=YES \
          -D WITH_TIFF=YES \
          -D WITH_OPENCL=YES \
          -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 \

          -D Tesseract_LIBRARY=/usr/local/lib/libtesseract.so \
          -D Tesseract_INCLUDE_DIR=/usr/local/include/tesseract \

          -D OPENCV_EXTRA_MODULES_PATH=$INSTALL_ROOT/opencv_contrib/modules \

          -D BUILD_opencv_python2=ON \
          -D PYTHON2_NUMPY_INCLUDE_DIRS=$PY2_SITE_PACKAGES/numpy/core/include/ \

          -D PYTHON2_EXECUTABLE=$PY2_DIR/bin/python \
          -D PYTHON2_PACKAGES_PATH=$PY2_SITE_PACKAGES \
          -D PYTHON2_LIBRARY=$PY2_DIR/lib/libpython2.7.so \
          -D PYTHON2_NUMPY_INCLUDE_DIRS=$PY2_SITE_PACKAGES/numpy/core/include \

          -D PYTHON_INCLUDE_DIR=$PY2_INCLUDE_DIR \
          -D PYTHON_INCLUDE_DIR2=$PY3_INCLUDE_DIR \

          -D BUILD_opencv_python3=ON \
          -D PYTHON3_EXECUTABLE=$PY3_DIR/bin/python \
          -D PYTHON3_INCLUDE_DIR=$PY3_DIR/include/python3.4m \
          -D PYTHON_INCLUDE_DIRS=$PY3_DIR/include/python3.4m \
          -D PYTHON3_PACKAGES_PATH=$PY3_SITE_PACKAGES \
          -D PYTHON3_LIBRARY=$PY3_DIR/lib/libpython3.4m.so \
          -D PYTHON3_NUMPY_INCLUDE_DIRS=$PY3_SITE_PACKAGES/numpy/core/include \
          .. && \
      make -j4

RUN make install && \
    ldconfig && \
    echo "Installed"

RUN source /etc/profile.d/build-env && \
    cp $INSTALL_ROOT/opencv/build/lib/cv2.so $PY2_SITE_PACKAGES/cv2.so && \
    cp $INSTALL_ROOT/opencv/build/lib/python3/cv2.cpython-34m.so $PY3_SITE_PACKAGES/cv2.so

# RUN cp $INSTALL_ROOT/opencv/build/lib/cv2.so /usr/local/lib/python2.7/ && \
    # cp $INSTALL_ROOT/opencv/build/lib/cv2.so /usr/local/lib/python3.4/
RUN source activate py2 && \
    python2.7 -c "import cv2; print('cv2.__version__ = ' + str(cv2.__version__))"
RUN source activate py3 && \
    python3.4 -c "import cv2; print('cv2.__version__ = ' + str(cv2.__version__))"

#######################
# End OpenCV
#######################
